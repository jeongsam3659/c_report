
C 필기
---
## 목록
- 환경설정
- IDE
- 기록
-
-
-

---


### 환경설정
1. 출처: 동빈나 C
 https://www.youtube.com/watch?v=V7TXlm7kpaE&list=PLRx0vPvlEmdDNHeulKC6JM25MmZVS_3nT&index=2


 

 ### IDE
 1. DEV C++
 https://sourceforge.net/projects/orwelldevcpp/
 설치

  도구 > 컴파일러 설정 > ++버튼(자동으로 컴파일러 잡아준다.) 확인


#include <stdio.h>              << 라이브러리 추가구역

int main(void){                 << main에서 시작되는걸로 약속되어있다.
	printf("Hellow World!");
	return 0;
}



### 기록

 - 변수
  프로그램이 실행되는 동안에 언제든지 저장된 값이 변경되는 공간 
 - 상수
  한번 정해지면 값을 변경할 필요가 없는 데이터

 - sizeof() 자료형int float double char
    %d int형
    %f float형 %.2f소수점둘째까지

    sizeof()
    ()안에 들어갈 변수의 메모리 크기를 알려준다. 
    int 4
    float 4
    double 8

    #include <limits.h>
    INT_MAX
    int형의 최대값을 알기위한 상수 , limits 라이브러리를 써야 출력할 수 있다.

 - 오버플로

 - 사칙연산

====
 - 사용자 정의 자료형User Defined / 파생 자료형Derived / 원시 자료형Primitive(일반적)
  
  숫자(실수)를 표현하고자 int double float자료형을 사용.
  void는 자료형 자체가 없다는 의미
  C언어는 'String'자료형이 없고 문자를 나타내는 char형만 사용.

  Variables Data Types
  Integer
  Character
  float
  Double 

  ex)
  연봉구하기
      #define MONTHS 12
      상수에 대한 정의 
        MONTHS라는 상수에 12를 정의.


  아스키코드 >> int문자형 / char문자형\
      %c >> 하나의char형을 출력
      C언어의 char형은 내부적으로 숫자로 구성.

      Char x = 65; printf("%c", x); >> A로 출력 
      또는
      Char z = 'B'; printf("%d", x); >> 66으로 출력
    
  10진수를 8진수 혹은 16진수로 바꾸어 출력
      8진수 >> %o
      16진수 >> %x 
  
====
   연산자 + - * / %(나머지)
      연산을 당하는 건 피연산자
      + - 등을 연산자 라고함.
      ++ 증감연산자 , !(Not)등..
   
   초를 입력 받아 몇분 몇초이니지 계산
      #define SECOND_PER_MINUTE 60;
	   int minute = input / SECOND_PER_MINUTE; 
	   int second = input % SECOND_PER_MINUTE;
	   printf("%d초는 %d분 %d초 \n",minute, second);


   ++ 과 -- 연산의 개념을 바르게 이해
      x++; 1을 더한다. x--; 1을 뺀다는 증감연삼자
      x++과 ++x 구분;
         연산자가 뒤에 있을경우 해당 식을 실행뒤에 증감연산자가 실행되고
         연산자가 앞에 있을경우 증감연산자가 실행된 이후 식을 실행한다.

   += -= *= /= %=(복합대입연산자)의 사용법 숙지
      x += 50;
      x = x + 50; 과 같은 이유를 축소시킨것. 
      프로그래밍에선
      부등호= 는 대입으로 우측에 있는 식의 결과를 좌측에 대입시킨다는 의미

   ex_
   x++ , x+=1 , x = x+1은 모두 같은 말.  

   == , >, <, &&, ||, !(관계연산자) 개념숙지
      == 서로 같은가? true : 1 , false : 0 으로 출력.
      != Not의 의미 서로 다른가?
      >, <, >=, <= 
      비교연산자. 주로 제어문 조건에 자주 쓰인다.

      && and  두 조건 모두 true이여야지 true 반환
      || or   두 조건 중 하나만 true이여도 true 반환
      논리연산자. 

   '조건 ? 참 : 거짓' 조건연산자
      조건의 결과에따라 참을 반환할시 거짓을 반환할지를 함축한 표현.
      ex_ int absoluteX = (x > 0) ? x : -x;
    

   pow()이용한 거듭제곱 연산
      #include <math.h>
      ex_
      double x = pow(2.0, 20.0);
	   printf("2의 20제곱은 %.0f입니다.\n", x);
    
===
   조건문 과 반복문
   if , switch case / for , while
      윤년
         조건1. 4년마다 , 100년단위일때는 해당 되지않음.
         조건2. 400단위일때는 어떤 상황이든 윤년.
      >>조건1 year % 4 == 0 && year % 100 != 0
      >>조건2 year % 400 == 0

      피라미드
         	for(i=0; i <N; i++){
		         for(j=N-i-1; j>0; j--){
			      //빈칸 
			      printf("  ");
		      }
		      for(j=0; j<i; j++){
			      printf("* ");
			      //빈칸 두개필요 
		      }
		      for(j=0; j<i -1; j++){
			      printf("* ");
		      }
		      printf("\n");
	         }
      
      무한반복
         for(;;) , while(1)
         중단
         break;
====

   input/output
      scanf("%d", &x) x라는 정수에 사용자에게 입력받은 값을 삽입.
      다만 사용자로부터 입력값에 따라. %c, %f, %if문법을 활용해야한다.
      %d: 10진수(정수형)

      %f: 실수형
      %e: 지수형
      %o: 8진수
      %x: 16진수
      %u: 부호없는 10진수
      %g: 실수형 자동출력
      %p: 포인터의 주소
      %c: 하나의 문자로 출력
      %s: 문자열
출처: https://byunggni.tistory.com/48 [띵돌이의 블로그]

   버퍼
   	getchar(); 단 한개의 문자를 입력 받는다라는 뜻

      //구구단

	   int x,i;
	   printf("정수를 입력하세요. :");
	   scanf("%d", &x); 
	   for(i =1; i<=9; i++){
		   printf("%d * %d =  %d\n", x, i , x * i);
	   }


====
   #포인터
   특정한 데이터가 저장되어 있는 메모리의 주소 그자체를 저장하는 변수로서 c청너를 고급스럽게 활용하기 위해

   void 
   함수의 반환값이 없을떄.


====
   반복함수와 재귀함수.
   반복
     while / for문법을 이용하여 특정 처리를 반복하는 방식.

   재귀
     자신의 함수 내부에서 자기자신을 스스로 호출함으로써 재귀적으로 문제 해결하는 함수
       재귀적 - 자신을 정의할 때 자기 자신을 재참조하는 방법을 뜻함. 
       ex_ 녹화화면 속 자신 / 엘레베이터 양사이드 거울 

   *조합 (수학)
     서로 다른 n개의 물건에서 순서를 생각하지 않고, r개를 택할때.
    이것은 n개에서 r개를 택하는 조합. 
    >>
     nCr은 
       r이 0이거나 n이라면 
       값 1이며,
     nCr(n-1, r-1) + nC(n-1, r)과 같다. 


====
   배열 Array
     데이터가 많을때 주로 사용된다.
    배열은 한없이 많을 수 있으면서도 그 데이터 개수가 변경될 수 있는 데이터들의 집합을
    지정해줄있기에 효과적.

    #include <limits.h>
    변수 = INT_MAX
      c언어 int에서 구현할 수 있는 가장 큰값.